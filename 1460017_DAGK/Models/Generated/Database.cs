




















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `ShopOnline`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=VYPC\SQLEXPRESS;Initial Catalog=ShopOnline;Integrated Security=True`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace ShopOnline
{

	public partial class ShopOnlineDB : Database
	{
		public ShopOnlineDB() 
			: base("ShopOnline")
		{
			CommonConstruct();
		}

		public ShopOnlineDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			ShopOnlineDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static ShopOnlineDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new ShopOnlineDB();
        }

		[ThreadStatic] static ShopOnlineDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static ShopOnlineDB repo { get { return ShopOnlineDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("dbo.ChiTietDonDatHang")]



	[PrimaryKey("IdCTDDH")]




	[ExplicitColumns]

    public partial class ChiTietDonDatHang : ShopOnlineDB.Record<ChiTietDonDatHang>  
    {



		[Column] public int IdCTDDH { get; set; }





		[Column] public int? IdDDH { get; set; }





		[Column] public int? IdSanPham { get; set; }





		[Column] public string TenSanPham { get; set; }





		[Column] public int? SoLuong { get; set; }





		[Column] public decimal? DonGia { get; set; }



	}

    

	[TableName("dbo.ChiTietPhieuNhap")]



	[PrimaryKey("IdCTPN")]




	[ExplicitColumns]

    public partial class ChiTietPhieuNhap : ShopOnlineDB.Record<ChiTietPhieuNhap>  
    {



		[Column] public int IdCTPN { get; set; }





		[Column] public int? IdPN { get; set; }





		[Column] public decimal? DonGiaNhap { get; set; }





		[Column] public int? SoLuongNhap { get; set; }





		[Column] public int? IdSanPham { get; set; }



	}

    

	[TableName("dbo.DonDatHang")]



	[PrimaryKey("IdDDH")]




	[ExplicitColumns]

    public partial class DonDatHang : ShopOnlineDB.Record<DonDatHang>  
    {



		[Column] public int IdDDH { get; set; }





		[Column] public int? IdKH { get; set; }





		[Column] public int? IdSanPham { get; set; }





		[Column] public DateTime? NgayDat { get; set; }





		[Column] public DateTime? NgayGiao { get; set; }





		[Column] public bool? DaHuy { get; set; }





		[Column] public bool? DaXoa { get; set; }





		[Column] public bool? TinhTrangGiaoHang { get; set; }





		[Column] public bool? DaThanhToan { get; set; }



	}

    

	[TableName("dbo.KhachHang")]



	[PrimaryKey("IdKH")]




	[ExplicitColumns]

    public partial class KhachHang : ShopOnlineDB.Record<KhachHang>  
    {



		[Column] public int IdKH { get; set; }





		[Column] public string TenKhachHang { get; set; }





		[Column] public string DiaChi { get; set; }





		[Column] public string Email { get; set; }





		[Column] public string SoDienThoai { get; set; }



	}

    

	[TableName("dbo.LoaiSanPham")]



	[PrimaryKey("IdLoaiSanPham")]




	[ExplicitColumns]

    public partial class LoaiSanPham : ShopOnlineDB.Record<LoaiSanPham>  
    {



		[Column] public int IdLoaiSanPham { get; set; }





		[Column] public string TenLoai { get; set; }





		[Column] public string ThongTin { get; set; }





		[Column] public string BiDanh { get; set; }



	}

    

	[TableName("dbo.MaLoaiSanPham")]



	[PrimaryKey("IdMLSP")]




	[ExplicitColumns]

    public partial class MaLoaiSanPham : ShopOnlineDB.Record<MaLoaiSanPham>  
    {



		[Column] public int IdMLSP { get; set; }





		[Column] public string TenLSP { get; set; }





		[Column] public string ThongTin { get; set; }





		[Column] public string Logo { get; set; }



	}

    

	[TableName("dbo.PhieuNhap")]



	[PrimaryKey("IdPN")]




	[ExplicitColumns]

    public partial class PhieuNhap : ShopOnlineDB.Record<PhieuNhap>  
    {



		[Column] public int IdPN { get; set; }





		[Column] public DateTime? NgayNhap { get; set; }





		[Column] public bool? DaXoa { get; set; }





		[Column] public int? IdMLSP { get; set; }



	}

    

	[TableName("dbo.SanPham")]



	[PrimaryKey("IdSanPham")]




	[ExplicitColumns]

    public partial class SanPham : ShopOnlineDB.Record<SanPham>  
    {



		[Column] public int IdSanPham { get; set; }





		[Column] public string TenSanPham { get; set; }





		[Column] public decimal? DonGia { get; set; }





		[Column] public DateTime? NgayCapNhat { get; set; }





		[Column] public string MoTa { get; set; }





		[Column] public int? LuotXem { get; set; }





		[Column] public int? IdLoaiSanPham { get; set; }





		[Column] public decimal? GiaKhuyenMai { get; set; }





		[Column] public string HinhAnh { get; set; }





		[Column] public string HinhAnh1 { get; set; }





		[Column] public string HinhAnh2 { get; set; }





		[Column] public bool? DaXoa { get; set; }





		[Column] public int? Moi { get; set; }





		[Column] public int? IdMLSP { get; set; }





		[Column] public int? SoLuongTon { get; set; }



	}

    

	[TableName("dbo.Slider")]



	[PrimaryKey("IdSlider")]




	[ExplicitColumns]

    public partial class Slider : ShopOnlineDB.Record<Slider>  
    {



		[Column] public int IdSlider { get; set; }





		[Column] public string HinhAnh { get; set; }



	}

    

	[TableName("dbo.ThanhVien")]



	[PrimaryKey("IdTV", AutoIncrement=false)]


	[ExplicitColumns]

    public partial class ThanhVien : ShopOnlineDB.Record<ThanhVien>  
    {



		[Column] public int IdTV { get; set; }





		[Column] public string TaiKhoan { get; set; }





		[Column] public string MatKhau { get; set; }





		[Column] public string HoTen { get; set; }



	}

    

	[TableName("dbo.TinTuc")]



	[PrimaryKey("IdTinTuc")]




	[ExplicitColumns]

    public partial class TinTuc : ShopOnlineDB.Record<TinTuc>  
    {



		[Column] public int IdTinTuc { get; set; }





		[Column] public string TieuDe { get; set; }





		[Column] public string NoiDung { get; set; }





		[Column] public string HinhAnhDaiDien { get; set; }





		[Column] public bool? Moi { get; set; }





		[Column] public bool? NoiBat { get; set; }





		[Column] public DateTime? NgayDang { get; set; }





		[Column] public string MoTa { get; set; }



	}


}
